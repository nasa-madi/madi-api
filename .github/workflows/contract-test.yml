name: Docker Compose

on:
  push:
    branches:
      - dockertest

env:
  WORKDIR: "/"
  FILE: "./cicd/contract.docker-compose.yml"
  ENTRYPOINT: "entrypoint-command"
  SERVICE: "service-name"
  COMMAND: "command"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker
        uses: KengoTODA/actions-setup-docker-compose@main
      
      - name: Start stack
        shell: bash
        run: |
<<<<<<< HEAD
          cd ${{ env.WORKDIR }}
          docker-compose -f ${{ env.FILE }} pull --include-deps
          docker-compose -f ${{ env.FILE }} up -d

      - name: Test
        shell: bash
        run: |
          cd ${{ env.WORKDIR }}
          DIR=$(pwd)
          docker-compose -f ${{ env.FILE }} run -v ${DIR}:/github_workspace -w /github_workspace --entrypoint ${{ env.ENTRYPOINT }} --rm ${{ env.SERVICE }} -- ${{ env.COMMAND }}
=======
          export OPENAI_API_KEY=XXX
          docker compose -f ${{ env.FILE }} --env OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} .env up --exit-code-from newman

      # - name: Setup Docker
      #   uses: KengoTODA/actions-setup-docker-compose@main
      #   with:
      #     version: '2.14.2'
      
      # - name: Start stack
      #   shell: bash
      #   run: |
      #     ls -la
      #     pwd
      #     cd ${{ env.WORKDIR }}
      #     docker-compose -f ${{ env.FILE }} pull --include-deps database storage
      #     docker-compose -f ${{ env.FILE }} up -d database storage api

      # - name: Test
      #   shell: bash
      #   run: |
      #     npm install -g newman
      #     newman run ./test/contracts/contract.collection.json
        
      #   # DIR=$(pwd)
      #   # docker-compose -f ${{ env.FILE }} run -v ${DIR}:/github_workspace -w /github_workspace --entrypoint ${{ env.ENTRYPOINT }} --rm ${{ env.SERVICE }} -- ${{ env.COMMAND }}
>>>>>>> 2874fe33 (update)

      - name: Stop stacks
        if: always()
        shell: bash
        run: |
          cd ${{ env.WORKDIR }}
          docker-compose -f ${{ env.FILE }} down