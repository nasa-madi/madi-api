name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "main", "develop", "test" ]

jobs:
  deploy:
    environment: ${{ github.ref_name == 'main' && 'production' || github.ref_name }}
    env: 
      ENV: ${{ github.ref_name == 'main' && 'production' || github.ref_name }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Get SHA for "migration" tag
        id: get-migration-sha
        run: |
          if git rev-parse refs/tags/migration >/dev/null 2>&1; then
            echo "MIGRATION_SHA=$(git rev-parse refs/tags/migration)"
            echo "MIGRATION_SHA=$(git rev-parse refs/tags/migration)" >> $GITHUB_ENV
          else
            echo "MIGRATION_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          fi

      - name: Get changes in migrations folder
        id: changed-files-migrations
        uses: tj-actions/changed-files@v42
        with:
          files: migrations/**
          sha: ${{ env.MIGRATION_SHA }}

      - name: Authenticate with Google
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ vars.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          
      - name: Inject Google Secret
        run: |-
          SECRET_ENV=${{ github.ref_name == 'main' && 'production' || github.ref_name }}
          gcloud secrets versions access latest --secret "${SECRET_ENV}-env-overrides" > ./config/local.yml;

      - name: Build and Push Container
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}
          registry: ${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.AR_REPO }}
          image_name: ${{ vars.SERVICE }}
          image_tag: ${{ github.sha }}



      - name: Deploy to Cloud Run with Migration
        id: migration
        if: steps.changed-files-migrations.outputs.any_changed == 'true'
        uses: google-github-actions/deploy-cloudrun@v2.0.0
        with:
          project_id: ${{ vars.PROJECT_ID }}
          service: ${{ vars.SERVICE }}-migrate
          region: ${{ vars.REGION }}
          image: ${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.AR_REPO }}/${{ vars.SERVICE }}:${{ github.sha }}
          env_vars: |
            MIGRATION=true
            NODE_CONFIG_ENV=${{ env.ENV }}
          no_traffic: true


      - name: Create Migration tag 
        if: steps.migration.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: require('./.cicd/upsertTag.cjs')({ github, context, tag:"_migration-${{ env.ENV }}" })
 

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2.0.0
        with:
          project_id: ${{ vars.PROJECT_ID }}
          service: ${{ vars.SERVICE }}
          region: ${{ vars.REGION }}
          image: ${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.AR_REPO }}/${{ vars.SERVICE }}:${{ github.sha }} 
          env_vars: |
            SEED=${{ github.ref_name == 'main' && 'false' || 'true' }}
            NODE_CONFIG_ENV=${{ env.ENV }}
              
      
      - name: Create Deployed Tag
        uses: actions/github-script@v7
        with:
          script: require('./.cicd/upsertTag.cjs')({ github, context, tag:"_deployed-${{ env.ENV }}" })
     