openapi: 3.0.0
info:
  title: ''
  version: 0.0.1
security: []
paths:
  /chats:
    get: {}
    post:
      tags:
        - chats
      summary: adds a new chat
      operationId: postChat
      description: Creates a new chat
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    messages:
                      type: array
                      items:
                        type: object
                        properties:
                          role:
                            type: string
                          content:
                            type: string
                        required:
                          - role
                          - content
                    model:
                      type: string
                    frequency_penalty:
                      type: number
                    logit_bias:
                      type: object
                      properties: {}
                    max_tokens:
                      type: integer
                    'n':
                      type: integer
                    presence_penalty:
                      type: number
                    response_format:
                      type: object
                      properties:
                        type:
                          type: string
                      required:
                        - type
                    seed:
                      type: integer
                    stop:
                      anyOf:
                        - type: string
                        - type: array
                          items:
                            type: string
                    stream:
                      type: boolean
                    temperature:
                      minimum: 0
                      maximum: 2
                      type: number
                    top_p:
                      type: number
                    tools:
                      type: array
                      items:
                        type: string
                    tool_choice:
                      type: string
                      pattern: ^none|auto|(0|[1-9]\d{0,}|)$
                - type: array
                  items:
                    type: object
                    properties:
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            role:
                              type: string
                            content:
                              type: string
                          required:
                            - role
                            - content
                      model:
                        type: string
                      frequency_penalty:
                        type: number
                      logit_bias:
                        type: object
                        properties: {}
                      max_tokens:
                        type: integer
                      'n':
                        type: integer
                      presence_penalty:
                        type: number
                      response_format:
                        type: object
                        properties:
                          type:
                            type: string
                        required:
                          - type
                      seed:
                        type: integer
                      stop:
                        anyOf:
                          - type: string
                          - type: array
                            items:
                              type: string
                      stream:
                        type: boolean
                      temperature:
                        minimum: 0
                        maximum: 2
                        type: number
                      top_p:
                        type: number
                      tools:
                        type: array
                        items:
                          type: string
                      tool_choice:
                        type: string
                        pattern: ^none|auto|(0|[1-9]\d{0,}|)$
      responses:
        '201':
          description: Chat created.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            role:
                              type: string
                            content:
                              type: string
                          required:
                            - role
                            - content
                      model:
                        type: string
                      frequency_penalty:
                        type: number
                      logit_bias:
                        type: object
                        properties: {}
                      max_tokens:
                        type: integer
                      'n':
                        type: integer
                      presence_penalty:
                        type: number
                      response_format:
                        type: object
                        properties:
                          type:
                            type: string
                        required:
                          - type
                      seed:
                        type: integer
                      stop:
                        anyOf:
                          - type: string
                          - type: array
                            items:
                              type: string
                      stream:
                        type: boolean
                      temperature:
                        minimum: 0
                        maximum: 2
                        type: number
                      top_p:
                        type: number
                      tools:
                        type: array
                        items:
                          type: string
                      tool_choice:
                        type: string
                        pattern: ^none|auto|(0|[1-9]\d{0,}|)$
                  - type: array
                    items:
                      type: object
                      properties:
                        messages:
                          type: array
                          items:
                            type: object
                            properties:
                              role:
                                type: string
                              content:
                                type: string
                            required:
                              - role
                              - content
                        model:
                          type: string
                        frequency_penalty:
                          type: number
                        logit_bias:
                          type: object
                          properties: {}
                        max_tokens:
                          type: integer
                        'n':
                          type: integer
                        presence_penalty:
                          type: number
                        response_format:
                          type: object
                          properties:
                            type:
                              type: string
                          required:
                            - type
                        seed:
                          type: integer
                        stop:
                          anyOf:
                            - type: string
                            - type: array
                              items:
                                type: string
                        stream:
                          type: boolean
                        temperature:
                          minimum: 0
                          maximum: 2
                          type: number
                        top_p:
                          type: number
                        tools:
                          type: array
                          items:
                            type: string
                        tool_choice:
                          type: string
                          pattern: ^none|auto|(0|[1-9]\d{0,}|)$
              examples:
                ${names}_post_default:
                  value: {}
                ${names}_post_array:
                  value: []
        '400':
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: that chat already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents:
    get:
      tags:
        - documents
      summary: Returns document based on query parameters
      operationId: getDocuments
      description: >-
        By including the appropriate query string parameters, search & return
        relevant documents records.
      responses:
        '200':
          description: includes the results matching query string criteria
          content:
            application/json:
              schema:
                type: object
                required:
                  - total
                  - limit
                  - skip
                  - data
                properties:
                  total:
                    type: integer
                  limit:
                    type: integer
                  skip:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          $ref: '#/components/schemas/IntegerId'
                        text:
                          type: string
              examples:
                documents_default:
                  value:
                    total: 2
                    limit: 10
                    skip: 0
                    data: []
                documents_zero:
                  value:
                    total: 0
                    limit: 10
                    skip: 0
                    data: []
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: default response if no query string parameters are sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - documents
      summary: adds a new document
      operationId: postDocument
      description: Creates a new document
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    id:
                      $ref: '#/components/schemas/IntegerId'
                    text:
                      type: string
                - type: array
                  items:
                    type: object
                    properties:
                      id:
                        $ref: '#/components/schemas/IntegerId'
                      text:
                        type: string
      responses:
        '201':
          description: Document created.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        $ref: '#/components/schemas/IntegerId'
                      text:
                        type: string
                  - type: array
                    items:
                      type: object
                      properties:
                        id:
                          $ref: '#/components/schemas/IntegerId'
                        text:
                          type: string
              examples:
                ${names}_post_default:
                  value: {}
                ${names}_post_array:
                  value: []
        '400':
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: that document already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents/{documentId}:
    get:
      tags:
        - documents
      summary: Returns document based id
      operationId: getDocument
      description: By including the id, get a single document
      parameters:
        - in: path
          name: documentId
          description: the id of a specific document
          required: true
          schema:
            $ref: '#/components/schemas/IntegerId'
          example: 1
      responses:
        '200':
          description: includes the results matching query string criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      $ref: '#/components/schemas/IntegerId'
                    text:
                      type: string
              examples:
                documents_id_default:
                  value: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - documents
      summary: soft deletes multiple documents
      operationId: deleteDocuments
      parameters:
        - in: path
          name: documentId
          description: the id of a specific document
          required: true
          schema:
            $ref: '#/components/schemas/IntegerId'
          example: 1
      responses:
        '200':
          description: Document deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/IntegerId'
                  text:
                    type: string
              examples:
                documents_delete:
                  value: {}
        '405':
          description: multiple deletes not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - documents
      summary: patches a subset of fields on a document
      operationId: patchDocument
      description: Patches a document by field
      parameters:
        - in: path
          name: documentId
          description: the id of a specific document
          schema:
            $ref: '#/components/schemas/IntegerId'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/IntegerId'
                text:
                  type: string
      responses:
        '200':
          description: document patched
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/IntegerId'
                  text:
                    type: string
              examples:
                documents_id_patch_default:
                  value: {}
        '400':
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tools:
    get:
      tags:
        - tools
      summary: Returns tool based on query parameters
      operationId: getTools
      description: >-
        By including the appropriate query string parameters, search & return
        relevant tools records.
      responses:
        '200':
          description: includes the results matching query string criteria
          content:
            application/json:
              schema:
                type: object
                required:
                  - total
                  - limit
                  - skip
                  - data
                properties:
                  total:
                    type: integer
                  limit:
                    type: integer
                  skip:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        tool_calls:
                          type: array
                          items:
                            additionalProperties: false
                            type: object
                            properties:
                              id:
                                type: string
                              type:
                                anyOf:
                                  - const: function
                                    type: string
                              function:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  arguments:
                                    anyOf:
                                      - type: string
                                      - type: object
                                        properties: {}
                                required:
                                  - name
                                  - arguments
                            required:
                              - id
                              - type
                              - function
              examples:
                tools_default:
                  value:
                    total: 2
                    limit: 10
                    skip: 0
                    data: []
                tools_zero:
                  value:
                    total: 0
                    limit: 10
                    skip: 0
                    data: []
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: default response if no query string parameters are sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - tools
      summary: adds a new tool
      operationId: postTool
      description: Creates a new tool
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    tool_calls:
                      type: array
                      items:
                        additionalProperties: false
                        type: object
                        properties:
                          id:
                            type: string
                          type:
                            anyOf:
                              - const: function
                                type: string
                          function:
                            type: object
                            properties:
                              name:
                                type: string
                              arguments:
                                anyOf:
                                  - type: string
                                  - type: object
                                    properties: {}
                            required:
                              - name
                              - arguments
                        required:
                          - id
                          - type
                          - function
                - type: array
                  items:
                    type: object
                    properties:
                      tool_calls:
                        type: array
                        items:
                          additionalProperties: false
                          type: object
                          properties:
                            id:
                              type: string
                            type:
                              anyOf:
                                - const: function
                                  type: string
                            function:
                              type: object
                              properties:
                                name:
                                  type: string
                                arguments:
                                  anyOf:
                                    - type: string
                                    - type: object
                                      properties: {}
                              required:
                                - name
                                - arguments
                          required:
                            - id
                            - type
                            - function
      responses:
        '201':
          description: Tool created.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      tool_calls:
                        type: array
                        items:
                          additionalProperties: false
                          type: object
                          properties:
                            id:
                              type: string
                            type:
                              anyOf:
                                - const: function
                                  type: string
                            function:
                              type: object
                              properties:
                                name:
                                  type: string
                                arguments:
                                  anyOf:
                                    - type: string
                                    - type: object
                                      properties: {}
                              required:
                                - name
                                - arguments
                          required:
                            - id
                            - type
                            - function
                  - type: array
                    items:
                      type: object
                      properties:
                        tool_calls:
                          type: array
                          items:
                            additionalProperties: false
                            type: object
                            properties:
                              id:
                                type: string
                              type:
                                anyOf:
                                  - const: function
                                    type: string
                              function:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  arguments:
                                    anyOf:
                                      - type: string
                                      - type: object
                                        properties: {}
                                required:
                                  - name
                                  - arguments
                            required:
                              - id
                              - type
                              - function
              examples:
                ${names}_post_default:
                  value: {}
                ${names}_post_array:
                  value: []
        '400':
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: that tool already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      tags:
        - users
      summary: Returns user based on query parameters
      operationId: getUsers
      description: >-
        By including the appropriate query string parameters, search & return
        relevant users records.
      responses:
        '200':
          description: includes the results matching query string criteria
          content:
            application/json:
              schema:
                type: object
                required:
                  - total
                  - limit
                  - skip
                  - data
                properties:
                  total:
                    type: integer
                  limit:
                    type: integer
                  skip:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          $ref: '#/components/schemas/IntegerId'
                        email:
                          type: string
                        password:
                          type: string
              examples:
                users_default:
                  value:
                    total: 2
                    limit: 10
                    skip: 0
                    data: []
                users_zero:
                  value:
                    total: 0
                    limit: 10
                    skip: 0
                    data: []
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: default response if no query string parameters are sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - users
      summary: adds a new user
      operationId: postUser
      description: Creates a new user
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    id:
                      $ref: '#/components/schemas/IntegerId'
                    email:
                      type: string
                    password:
                      type: string
                - type: array
                  items:
                    type: object
                    properties:
                      id:
                        $ref: '#/components/schemas/IntegerId'
                      email:
                        type: string
                      password:
                        type: string
      responses:
        '201':
          description: User created.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        $ref: '#/components/schemas/IntegerId'
                      email:
                        type: string
                      password:
                        type: string
                  - type: array
                    items:
                      type: object
                      properties:
                        id:
                          $ref: '#/components/schemas/IntegerId'
                        email:
                          type: string
                        password:
                          type: string
              examples:
                ${names}_post_default:
                  value: {}
                ${names}_post_array:
                  value: []
        '400':
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: that user already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}:
    get:
      tags:
        - users
      summary: Returns user based id
      operationId: getUser
      description: By including the id, get a single user
      parameters:
        - in: path
          name: userId
          description: the id of a specific user
          required: true
          schema:
            $ref: '#/components/schemas/IntegerId'
          example: 1
      responses:
        '200':
          description: includes the results matching query string criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      $ref: '#/components/schemas/IntegerId'
                    email:
                      type: string
                    password:
                      type: string
              examples:
                users_id_default:
                  value: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - users
      summary: soft deletes multiple users
      operationId: deleteUsers
      parameters:
        - in: path
          name: userId
          description: the id of a specific user
          required: true
          schema:
            $ref: '#/components/schemas/IntegerId'
          example: 1
      responses:
        '200':
          description: User deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/IntegerId'
                  email:
                    type: string
                  password:
                    type: string
              examples:
                users_delete:
                  value: {}
        '405':
          description: multiple deletes not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users
      summary: patches a subset of fields on a user
      operationId: patchUser
      description: Patches a user by field
      parameters:
        - in: path
          name: userId
          description: the id of a specific user
          schema:
            $ref: '#/components/schemas/IntegerId'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/IntegerId'
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: user patched
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/IntegerId'
                  email:
                    type: string
                  password:
                    type: string
              examples:
                users_id_patch_default:
                  value: {}
        '400':
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes: {}
  requestBodies: {}
  responses:
    Chat_FJS_Array:
      description: includes the results matching query string criteria
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - limit
              - skip
              - data
            properties:
              total:
                type: integer
              limit:
                type: integer
              skip:
                type: integer
              data:
                type: array
                items:
                  type: object
                  properties:
                    messages:
                      type: array
                      items:
                        type: object
                        properties:
                          role:
                            type: string
                          content:
                            type: string
                        required:
                          - role
                          - content
                    model:
                      type: string
                    frequency_penalty:
                      type: number
                    logit_bias:
                      type: object
                      properties: {}
                    max_tokens:
                      type: integer
                    'n':
                      type: integer
                    presence_penalty:
                      type: number
                    response_format:
                      type: object
                      properties:
                        type:
                          type: string
                      required:
                        - type
                    seed:
                      type: integer
                    stop:
                      anyOf:
                        - type: string
                        - type: array
                          items:
                            type: string
                    stream:
                      type: boolean
                    temperature:
                      minimum: 0
                      maximum: 2
                      type: number
                    top_p:
                      type: number
                    tools:
                      type: array
                      items:
                        type: string
                    tool_choice:
                      type: string
                      pattern: ^none|auto|(0|[1-9]\d{0,}|)$
          examples:
            chats_default:
              value:
                total: 2
                limit: 10
                skip: 0
                data: []
            chats_zero:
              value:
                total: 0
                limit: 10
                skip: 0
                data: []
    Document_FJS_Array:
      description: includes the results matching query string criteria
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - limit
              - skip
              - data
            properties:
              total:
                type: integer
              limit:
                type: integer
              skip:
                type: integer
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      $ref: '#/components/schemas/IntegerId'
                    text:
                      type: string
          examples:
            documents_default:
              value:
                total: 2
                limit: 10
                skip: 0
                data: []
            documents_zero:
              value:
                total: 0
                limit: 10
                skip: 0
                data: []
    Tool_FJS_Array:
      description: includes the results matching query string criteria
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - limit
              - skip
              - data
            properties:
              total:
                type: integer
              limit:
                type: integer
              skip:
                type: integer
              data:
                type: array
                items:
                  type: object
                  properties:
                    tool_calls:
                      type: array
                      items:
                        additionalProperties: false
                        type: object
                        properties:
                          id:
                            type: string
                          type:
                            anyOf:
                              - const: function
                                type: string
                          function:
                            type: object
                            properties:
                              name:
                                type: string
                              arguments:
                                anyOf:
                                  - type: string
                                  - type: object
                                    properties: {}
                            required:
                              - name
                              - arguments
                        required:
                          - id
                          - type
                          - function
          examples:
            tools_default:
              value:
                total: 2
                limit: 10
                skip: 0
                data: []
            tools_zero:
              value:
                total: 0
                limit: 10
                skip: 0
                data: []
    User_FJS_Array:
      description: includes the results matching query string criteria
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - limit
              - skip
              - data
            properties:
              total:
                type: integer
              limit:
                type: integer
              skip:
                type: integer
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      $ref: '#/components/schemas/IntegerId'
                    email:
                      type: string
                    password:
                      type: string
          examples:
            users_default:
              value:
                total: 2
                limit: 10
                skip: 0
                data: []
            users_zero:
              value:
                total: 0
                limit: 10
                skip: 0
                data: []
  examples:
    chats_zero:
      value:
        total: 0
        limit: 10
        skip: 0
        data: []
    chats_default:
      value:
        total: 2
        limit: 10
        skip: 0
        data: []
    chats_post_default:
      value: {}
    chats_post_array:
      value: []
    chats_id_default:
      value: {}
    chats_id_patch_default:
      value: {}
    chats_id_put_default:
      value: {}
    chats_id_delete_default:
      value: {}
    documents_zero:
      value:
        total: 0
        limit: 10
        skip: 0
        data: []
    documents_default:
      value:
        total: 2
        limit: 10
        skip: 0
        data: []
    documents_post_default:
      value: {}
    documents_post_array:
      value: []
    documents_id_default:
      value: {}
    documents_id_patch_default:
      value: {}
    documents_id_put_default:
      value: {}
    documents_id_delete_default:
      value: {}
    tools_zero:
      value:
        total: 0
        limit: 10
        skip: 0
        data: []
    tools_default:
      value:
        total: 2
        limit: 10
        skip: 0
        data: []
    tools_post_default:
      value: {}
    tools_post_array:
      value: []
    tools_id_default:
      value: {}
    tools_id_patch_default:
      value: {}
    tools_id_put_default:
      value: {}
    tools_id_delete_default:
      value: {}
    users_zero:
      value:
        total: 0
        limit: 10
        skip: 0
        data: []
    users_default:
      value:
        total: 2
        limit: 10
        skip: 0
        data: []
    users_post_default:
      value: {}
    users_post_array:
      value: []
    users_id_default:
      value: {}
    users_id_patch_default:
      value: {}
    users_id_put_default:
      value: {}
    users_id_delete_default:
      value: {}
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          minimum: 0
        message:
          type: string
        name:
          type: string
        className:
          type: string
    IntegerId:
      type: integer
      readOnly: true
      minimum: 0
      maximum: 100000000
      example: 1
    Uuid:
      type: string
      format: uuid
      example: 74738ff5-5367-5958-9aee-98fffdcd1876
    ObjectId:
      anyOf:
        - type: string
          example: 74738ff5-5367-5958-9aee-98fffdcd1876
        - type: object
          properties: {}
          additionalProperties: false
    ISODate:
      type: string
      format: date-time
      example: '2017-07-21T17:32:28.000Z'
    Chat:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              role:
                type: string
              content:
                type: string
            required:
              - role
              - content
        model:
          type: string
        frequency_penalty:
          type: number
        logit_bias:
          type: object
          properties: {}
        max_tokens:
          type: integer
        'n':
          type: integer
        presence_penalty:
          type: number
        response_format:
          type: object
          properties:
            type:
              type: string
          required:
            - type
        seed:
          type: integer
        stop:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
        stream:
          type: boolean
        temperature:
          minimum: 0
          maximum: 2
          type: number
        top_p:
          type: number
        tools:
          type: array
          items:
            type: string
        tool_choice:
          type: string
          pattern: ^none|auto|(0|[1-9]\d{0,}|)$
    Document:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IntegerId'
        text:
          type: string
    Tool:
      type: object
      properties:
        tool_calls:
          type: array
          items:
            additionalProperties: false
            type: object
            properties:
              id:
                type: string
              type:
                anyOf:
                  - const: function
                    type: string
              function:
                type: object
                properties:
                  name:
                    type: string
                  arguments:
                    anyOf:
                      - type: string
                      - type: object
                        properties: {}
                required:
                  - name
                  - arguments
            required:
              - id
              - type
              - function
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IntegerId'
        email:
          type: string
        password:
          type: string
